{"remainingRequest":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\demo\\ng_grid_demo\\demo_one\\src\\views\\NgGridPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\demo\\ng_grid_demo\\demo_one\\src\\views\\NgGridPage.vue","mtime":1619367172927},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBBZ0dyaWRWdWUgfSBmcm9tICJhZy1ncmlkLXZ1ZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIk5nR3JpZFBhZ2UiLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjb2x1bW5EZWZzOiBudWxsLA0KICAgICAgcm93RGF0YTogbnVsbCwNCiAgICAgIGdyaWRBcGk6IG51bGwsDQogICAgICBjb2x1bW5BcGk6IG51bGwsDQogICAgICBhdXRvR3JvdXBDb2x1bW5EZWY6IG51bGwsDQogICAgfTsNCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIEFnR3JpZFZ1ZSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG9uR3JpZFJlYWR5KHBhcmFtcykgew0KICAgICAgdGhpcy5ncmlkQXBpID0gcGFyYW1zLmFwaTsNCiAgICAgIHRoaXMuY29sdW1uQXBpID0gcGFyYW1zLmNvbHVtbkFwaTsNCiAgICB9LA0KICAgIGdldFNlbGVjdGVkUm93cygpIHsNCiAgICAgIGNvbnN0IHNlbGVjdGVkTm9kZXMgPSB0aGlzLmdyaWRBcGkuZ2V0U2VsZWN0ZWROb2RlcygpOw0KICAgICAgY29uc3Qgc2VsZWN0ZWREYXRhID0gc2VsZWN0ZWROb2Rlcy5tYXAoKG5vZGUpID0+IG5vZGUuZGF0YSk7DQogICAgICBjb25zdCBzZWxlY3RlZERhdGFTdHJpbmdQcmVzZW50YXRpb24gPSBzZWxlY3RlZERhdGENCiAgICAgICAgLm1hcCgobm9kZSkgPT4gYCR7bm9kZS5tYWtlfSAke25vZGUubW9kZWx9YCkNCiAgICAgICAgLmpvaW4oIiwgIik7DQogICAgICBhbGVydChgU2VsZWN0ZWQgbm9kZXM6ICR7c2VsZWN0ZWREYXRhU3RyaW5nUHJlc2VudGF0aW9ufWApOw0KICAgIH0sDQogIH0sDQogIGJlZm9yZU1vdW50KCkgew0KICAgIHRoaXMuY29sdW1uRGVmcyA9IFsNCiAgICAgIHsgZmllbGQ6ICJtYWtlIiwgc29ydGFibGU6IHRydWUsIGZpbHRlcjogdHJ1ZSwgY2hlY2tib3hTZWxlY3Rpb246IHRydWUgfSwNCiAgICAgIHsgZmllbGQ6ICJtb2RlbCIsIHNvcnRhYmxlOiB0cnVlLCBmaWx0ZXI6IHRydWUgfSwNCiAgICAgIHsgZmllbGQ6ICJwcmljZSIsIHNvcnRhYmxlOiB0cnVlLCBmaWx0ZXI6IHRydWUgfSwNCiAgICBdOw0KDQogICAgdGhpcy5hdXRvR3JvdXBDb2x1bW5EZWYgPSB7DQogICAgICBoZWFkZXJOYW1lOiAiTW9kZWwiLA0KICAgICAgZmllbGQ6ICJtb2RlbCIsDQogICAgICBjZWxsUmVuZGVyZXI6ICJhZ0dyb3VwQ2VsbFJlbmRlcmVyIiwNCiAgICAgIGNlbGxSZW5kZXJlclBhcmFtczogew0KICAgICAgICBjaGVja2JveDogdHJ1ZSwNCiAgICAgIH0sDQogICAgfTsNCiAgICBmZXRjaCgiaHR0cHM6Ly93d3cuYWctZ3JpZC5jb20vZXhhbXBsZS1hc3NldHMvcm93LWRhdGEuanNvbiIpDQogICAgICAudGhlbigocmVzdWx0KSA9PiByZXN1bHQuanNvbigpKQ0KICAgICAgLnRoZW4oKHJvd0RhdGEpID0+ICh0aGlzLnJvd0RhdGEgPSByb3dEYXRhKSk7DQogIH0sDQp9Ow0K"},{"version":3,"sources":["NgGridPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NgGridPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"getSelectedRows()\">Get Selected Rows</button>\r\n    <ag-grid-vue\r\n      class=\"ag-theme-alpine NgGridPage\"\r\n      :columnDefs=\"columnDefs\"\r\n      :rowData=\"rowData\"\r\n      rowSelection=\"multiple\"\r\n      @grid-ready=\"onGridReady\"\r\n    >\r\n    </ag-grid-vue>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue\";\r\n\r\nexport default {\r\n  name: \"NgGridPage\",\r\n  data() {\r\n    return {\r\n      columnDefs: null,\r\n      rowData: null,\r\n      gridApi: null,\r\n      columnApi: null,\r\n      autoGroupColumnDef: null,\r\n    };\r\n  },\r\n  components: {\r\n    AgGridVue,\r\n  },\r\n  methods: {\r\n    onGridReady(params) {\r\n      this.gridApi = params.api;\r\n      this.columnApi = params.columnApi;\r\n    },\r\n    getSelectedRows() {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map((node) => node.data);\r\n      const selectedDataStringPresentation = selectedData\r\n        .map((node) => `${node.make} ${node.model}`)\r\n        .join(\", \");\r\n      alert(`Selected nodes: ${selectedDataStringPresentation}`);\r\n    },\r\n  },\r\n  beforeMount() {\r\n    this.columnDefs = [\r\n      { field: \"make\", sortable: true, filter: true, checkboxSelection: true },\r\n      { field: \"model\", sortable: true, filter: true },\r\n      { field: \"price\", sortable: true, filter: true },\r\n    ];\r\n\r\n    this.autoGroupColumnDef = {\r\n      headerName: \"Model\",\r\n      field: \"model\",\r\n      cellRenderer: \"agGroupCellRenderer\",\r\n      cellRendererParams: {\r\n        checkbox: true,\r\n      },\r\n    };\r\n    fetch(\"https://www.ag-grid.com/example-assets/row-data.json\")\r\n      .then((result) => result.json())\r\n      .then((rowData) => (this.rowData = rowData));\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n.NgGridPage {\r\n  width: 650px;\r\n  height: 600px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n\r\n\r\n"]}]}