{"remainingRequest":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\babel-loader\\lib\\index.js!E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\demo\\ng_grid_demo\\demo_one\\src\\views\\NgGridPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\demo\\ng_grid_demo\\demo_one\\src\\views\\NgGridPage.vue","mtime":1619367172927},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\ng_grid_demo\\demo_one\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBBZ0dyaWRWdWUgfSBmcm9tICJhZy1ncmlkLXZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTmdHcmlkUGFnZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbHVtbkRlZnM6IG51bGwsCiAgICAgIHJvd0RhdGE6IG51bGwsCiAgICAgIGdyaWRBcGk6IG51bGwsCiAgICAgIGNvbHVtbkFwaTogbnVsbCwKICAgICAgYXV0b0dyb3VwQ29sdW1uRGVmOiBudWxsCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgQWdHcmlkVnVlOiBBZ0dyaWRWdWUKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uR3JpZFJlYWR5OiBmdW5jdGlvbiBvbkdyaWRSZWFkeShwYXJhbXMpIHsKICAgICAgdGhpcy5ncmlkQXBpID0gcGFyYW1zLmFwaTsKICAgICAgdGhpcy5jb2x1bW5BcGkgPSBwYXJhbXMuY29sdW1uQXBpOwogICAgfSwKICAgIGdldFNlbGVjdGVkUm93czogZnVuY3Rpb24gZ2V0U2VsZWN0ZWRSb3dzKCkgewogICAgICB2YXIgc2VsZWN0ZWROb2RlcyA9IHRoaXMuZ3JpZEFwaS5nZXRTZWxlY3RlZE5vZGVzKCk7CiAgICAgIHZhciBzZWxlY3RlZERhdGEgPSBzZWxlY3RlZE5vZGVzLm1hcChmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlLmRhdGE7CiAgICAgIH0pOwogICAgICB2YXIgc2VsZWN0ZWREYXRhU3RyaW5nUHJlc2VudGF0aW9uID0gc2VsZWN0ZWREYXRhLm1hcChmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiAiIi5jb25jYXQobm9kZS5tYWtlLCAiICIpLmNvbmNhdChub2RlLm1vZGVsKTsKICAgICAgfSkuam9pbigiLCAiKTsKICAgICAgYWxlcnQoIlNlbGVjdGVkIG5vZGVzOiAiLmNvbmNhdChzZWxlY3RlZERhdGFTdHJpbmdQcmVzZW50YXRpb24pKTsKICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5jb2x1bW5EZWZzID0gW3sKICAgICAgZmllbGQ6ICJtYWtlIiwKICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgIGZpbHRlcjogdHJ1ZSwKICAgICAgY2hlY2tib3hTZWxlY3Rpb246IHRydWUKICAgIH0sIHsKICAgICAgZmllbGQ6ICJtb2RlbCIsCiAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICBmaWx0ZXI6IHRydWUKICAgIH0sIHsKICAgICAgZmllbGQ6ICJwcmljZSIsCiAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICBmaWx0ZXI6IHRydWUKICAgIH1dOwogICAgdGhpcy5hdXRvR3JvdXBDb2x1bW5EZWYgPSB7CiAgICAgIGhlYWRlck5hbWU6ICJNb2RlbCIsCiAgICAgIGZpZWxkOiAibW9kZWwiLAogICAgICBjZWxsUmVuZGVyZXI6ICJhZ0dyb3VwQ2VsbFJlbmRlcmVyIiwKICAgICAgY2VsbFJlbmRlcmVyUGFyYW1zOiB7CiAgICAgICAgY2hlY2tib3g6IHRydWUKICAgICAgfQogICAgfTsKICAgIGZldGNoKCJodHRwczovL3d3dy5hZy1ncmlkLmNvbS9leGFtcGxlLWFzc2V0cy9yb3ctZGF0YS5qc29uIikudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIHJldHVybiByZXN1bHQuanNvbigpOwogICAgfSkudGhlbihmdW5jdGlvbiAocm93RGF0YSkgewogICAgICByZXR1cm4gX3RoaXMucm93RGF0YSA9IHJvd0RhdGE7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["NgGridPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAeA,SAAA,SAAA,QAAA,aAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,IAJA;AAKA,MAAA,kBAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAXA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,MADA,EACA;AACA,WAAA,OAAA,GAAA,MAAA,CAAA,GAAA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,SAAA;AACA,KAJA;AAKA,IAAA,eALA,6BAKA;AACA,UAAA,aAAA,GAAA,KAAA,OAAA,CAAA,gBAAA,EAAA;AACA,UAAA,YAAA,GAAA,aAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA;AAAA,OAAA,CAAA;AACA,UAAA,8BAAA,GAAA,YAAA,CACA,GADA,CACA,UAAA,IAAA;AAAA,yBAAA,IAAA,CAAA,IAAA,cAAA,IAAA,CAAA,KAAA;AAAA,OADA,EAEA,IAFA,CAEA,IAFA,CAAA;AAGA,MAAA,KAAA,2BAAA,8BAAA,EAAA;AACA;AAZA,GAdA;AA4BA,EAAA,WA5BA,yBA4BA;AAAA;;AACA,SAAA,UAAA,GAAA,CACA;AAAA,MAAA,KAAA,EAAA,MAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,iBAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,KAAA,EAAA,OAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAFA,EAGA;AAAA,MAAA,KAAA,EAAA,OAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAHA,CAAA;AAMA,SAAA,kBAAA,GAAA;AACA,MAAA,UAAA,EAAA,OADA;AAEA,MAAA,KAAA,EAAA,OAFA;AAGA,MAAA,YAAA,EAAA,qBAHA;AAIA,MAAA,kBAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AAJA,KAAA;AAQA,IAAA,KAAA,CAAA,sDAAA,CAAA,CACA,IADA,CACA,UAAA,MAAA;AAAA,aAAA,MAAA,CAAA,IAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,UAAA,OAAA;AAAA,aAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AAAA,KAFA;AAGA;AA9CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <button @click=\"getSelectedRows()\">Get Selected Rows</button>\r\n    <ag-grid-vue\r\n      class=\"ag-theme-alpine NgGridPage\"\r\n      :columnDefs=\"columnDefs\"\r\n      :rowData=\"rowData\"\r\n      rowSelection=\"multiple\"\r\n      @grid-ready=\"onGridReady\"\r\n    >\r\n    </ag-grid-vue>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue\";\r\n\r\nexport default {\r\n  name: \"NgGridPage\",\r\n  data() {\r\n    return {\r\n      columnDefs: null,\r\n      rowData: null,\r\n      gridApi: null,\r\n      columnApi: null,\r\n      autoGroupColumnDef: null,\r\n    };\r\n  },\r\n  components: {\r\n    AgGridVue,\r\n  },\r\n  methods: {\r\n    onGridReady(params) {\r\n      this.gridApi = params.api;\r\n      this.columnApi = params.columnApi;\r\n    },\r\n    getSelectedRows() {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map((node) => node.data);\r\n      const selectedDataStringPresentation = selectedData\r\n        .map((node) => `${node.make} ${node.model}`)\r\n        .join(\", \");\r\n      alert(`Selected nodes: ${selectedDataStringPresentation}`);\r\n    },\r\n  },\r\n  beforeMount() {\r\n    this.columnDefs = [\r\n      { field: \"make\", sortable: true, filter: true, checkboxSelection: true },\r\n      { field: \"model\", sortable: true, filter: true },\r\n      { field: \"price\", sortable: true, filter: true },\r\n    ];\r\n\r\n    this.autoGroupColumnDef = {\r\n      headerName: \"Model\",\r\n      field: \"model\",\r\n      cellRenderer: \"agGroupCellRenderer\",\r\n      cellRendererParams: {\r\n        checkbox: true,\r\n      },\r\n    };\r\n    fetch(\"https://www.ag-grid.com/example-assets/row-data.json\")\r\n      .then((result) => result.json())\r\n      .then((rowData) => (this.rowData = rowData));\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n.NgGridPage {\r\n  width: 650px;\r\n  height: 600px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n\r\n\r\n"],"sourceRoot":"src/views"}]}